/* common */
tr[icon]>td:first-child::before,
div.lm_tab::before,
details>summary::after,
.lm_controls .lm_close::before,
.lm_controls .lm_maximise::before,
.lm_controls .lm_tabdropdown::before,
.lm_maximised .lm_controls .lm_maximise::before,
div[view=ViewAnimation] fudge-stepper::after,
.buttonIcon::before,
fudge-reference>label::after,
fudge-boolean input[type="checkbox"]::before {
  width: 16px;
  height: 16px;
  content: "";
  background: var(--color-text);
  display: inline-block;
  margin-right: 5px;
  vertical-align: inherit;
}

/* Checkbox */
fudge-boolean input[type="checkbox"] {
  appearance: none;
  /* margin-right: 0.2em; */
  vertical-align: bottom;
}

fudge-boolean input[type="checkbox"]::before {
  mask-image: url(../Html/Icon/SwitchOff.svg);
}

fudge-boolean input[type="checkbox"]:checked:before {
  mask-image: url(../Html/Icon/SwitchOn.svg);
}

/* View controls */
.lm_controls .lm_close::before {
  mask-image: url(../Html/Icon/Close.svg);
  margin-left: 5px;
}

.lm_controls .lm_maximise::before {
  mask-image: url(../Html/Icon/Maximize.svg);
}

.lm_controls .lm_tabdropdown::before {
  mask-image: url(../Html/Icon/Dropdown.svg);
  margin-left: 5px;
}

.lm_maximised .lm_controls .lm_maximise::before {
  mask-image: url(../Html/Icon/Minimize.svg);
}

/* Resources in ViewInternal */
tr[icon]>td:first-child>input {
  width: calc(100% - 21px);
}

ul.tree fieldset:has(>*[icon^=Folder])::before,
tr[icon^=Folder]>td:first-child::before {
  mask-image: url(../Html/Icon/Folder.svg);
}

ul.tree fieldset:has(>*[icon^=Mesh])::before,
tr[icon^=Mesh]>td:first-child::before {
  mask-image: url(../Html/Icon/Mesh.svg);
}

ul.tree fieldset:has(>*[icon^=Material])::before,
tr[icon^=Material]>td:first-child::before {
  mask-image: url(../Html/Icon/Material.svg);
}

ul.tree fieldset:has(>*[icon^=Graph])::before,
tr[icon^=Graph]>td:first-child::before {
  mask-image: url(../Html/Icon/Graph.svg);
}

ul.tree fieldset:has(>*[icon^=Audio])::before,
tr[icon^=Audio]>td:first-child::before {
  mask-image: url(../Html/Icon/Audio.svg);
}

ul.tree fieldset:has(>*[icon^=Texture])::before,
tr[icon^=Texture]>td:first-child::before {
  mask-image: url(../Html/Icon/Texture.svg);
}

ul.tree fieldset:has(>*[icon^=Animation])::before,
tr[icon^=Animation]>td:first-child::before {
  mask-image: url(../Html/Icon/Animation.svg);
}

ul.tree fieldset:has(>*[icon^=ParticleSystem])::before,
tr[icon^=ParticleSystem]>td:first-child::before {
  mask-image: url(../Html/Icon/Particles.svg);
}

ul.tree fieldset:has(>*[icon])::before {
  mask-size: 80%;
  mask-repeat: no-repeat;
  mask-position: center;
  content: "â–º";
  background: var(--color-text);
  vertical-align: inherit;
}

ul.tree input[type="checkbox"]:has(+ fieldset>*[icon=Folder]) {
  display: inline;
}

/* Panel titles */

div.lm_tab[title^="Graph"]::before {
  mask-image: url(../Html/Icon/Graph.svg);
}

div.lm_tab[title^="Project"]::before {
  mask-image: url(../Html/Icon/Project.svg);
}

div.lm_tab[title^="Help"]::before {
  mask-image: url(../Html/Icon/Help.svg);
}

div.lm_tab[title^="Animation"]::before {
  mask-image: url(../Html/Icon/Animation.svg);
}

div.lm_tab[title^="ParticleSystem"]::before {
  mask-image: url(../Html/Icon/Particles.svg);
}


/* View titles */
div.lm_tab[title^="Internal"]::before {
  mask-image: url(../Html/Icon/Internal.svg);
}

div.lm_tab[title^="Table"]::before {
  mask-image: url(../Html/Icon/Table.svg);
}

div.lm_tab[title^="External"]::before {
  mask-image: url(../Html/Icon/External.svg);
}

div.lm_tab[title^="Preview"]::before,
div.lm_tab[title^="Render"]::before {
  mask-image: url(../Html/Icon/Camera.svg);
}

div.lm_tab[title^="PREVIEW"]::before,
div.lm_tab[title^="RENDER"]::before {
  mask-image: url(../Html/Icon/Light.svg);
}

div.lm_tab[title^="Properties"]::before {
  mask-image: url(../Html/Icon/Document.svg);
}

div.lm_tab[title^="Script"]::before {
  mask-image: url(../Html/Icon/Script.svg);
}

div.lm_tab[title^="Hierarchy"]::before {
  mask-image: url(../Html/Icon/Hierarchy.svg);
}

div.lm_tab[title^="Components"]::before {
  mask-image: url(../Html/Icon/Components.svg);
}

div.lm_tab[title^="Dopesheet"]::before {
  mask-image: url(../Html/Icon/Dopesheet.svg);
}

div.lm_tab[title^="Curves"]::before {
  mask-image: url(../Html/Icon/Curves.svg);
}

/* Properties */
details>summary::after {
  margin-right: 0px;
  margin-left: 5px;
  /* default icon for scripts */
  mask-image: url(../Html/Icon/Script.svg);
  vertical-align: bottom;
}

details[type=Details]>summary::after {
  width: 0px;
}

details[key^=coat]>summary::after {
  /* show no icon for coat */
  width: 0px;
  margin: 0px;
}

fudge-reference>label::after {
  margin-left: 0.5em;
  margin-right: 3px;
  mask-image: url(../Html/Icon/Script.svg);
}

fudge-reference[type*=Graph]>label::after {
  mask-image: url(../Html/Icon/Graph.svg);
}

details[type*=Texture]>summary::after,
fudge-reference[type*=Texture]>label::after {
  mask-image: url(../Html/Icon/Texture.svg);
}

details[type*=Material]>summary::after,
fudge-reference[type*=Material]>label::after {
  mask-image: url(../Html/Icon/Material.svg);
}

details[type*=Mesh]>summary::after,
fudge-reference[type*=Mesh]>label::after {
  mask-image: url(../Html/Icon/Mesh.svg);
}

details[type*=Light]>summary::after,
fudge-reference[type*=Light]>label::after {
  mask-image: url(../Html/Icon/Light.svg);
}

details[type*=Animation]>summary::after,
details[type^=ComponentAnimation]>summary::after,
fudge-reference[type*=Animation]>label::after {
  mask-image: url(../Html/Icon/Animation.svg);
}

details[type*=ParticleSystem]>summary::after,
fudge-reference[type*=ParticleSystem]>label::after {
  mask-image: url(../Html/Icon/Particles.svg);
}

details[type*=Audio]>summary::after,
fudge-reference[type*=Audio]>label::after {
  mask-image: url(../Html/Icon/Audio.svg);
}

details[key^=script]>summary::after,
details[key^=ComponentScript]>summary::after {
  mask-image: url(../Html/Icon/Script.svg);
}

details[type^=ComponentAudioListener]>summary::after {
  mask-image: url(../Html/Icon/Listener.svg);
}

details[type^=ComponentTransform]>summary::after,
details[key^=mtxTransforms]>summary::after {
  mask-image: url(../Html/Icon/Transform.svg);
}

details[type^=ComponentRigidbody]>summary::after {
  mask-image: url(../Html/Icon/Rigidbody.svg);
}

details[key^=Joint]>summary::after {
  mask-image: url(../Html/Icon/Joint.svg);
}

details[type^=ComponentCamera]>summary::after,
details[type^=ComponentVRDevice]>summary::after {
  mask-image: url(../Html/Icon/Camera.svg);
}

details[key^=shape]>summary::after {
  mask-image: url(../Html/Icon/Shape.svg);
}

/* Playback */
.buttonIcon::before {
  margin: 0;
  vertical-align: middle;
}

.buttonIcon[id="previous"]::before {
  mask-image: url(../Html/Icon/Previous.svg);
}

.buttonIcon[id="backward"]::before {
  mask-image: url(../Html/Icon/Backward.svg);
}

.buttonIcon[id="forward"]::before {
  mask-image: url(../Html/Icon/Forward.svg);
}

.buttonIcon[id="play"]::before {
  mask-image: url(../Html/Icon/Play.svg);
}

.buttonIcon[id="pause"]::before {
  mask-image: url(../Html/Icon/Pause.svg);
}

.buttonIcon[id="next"]::before {
  mask-image: url(../Html/Icon/Next.svg);
}

/* Animation */
div[view=ViewAnimation] fudge-stepper {
  --color-animation-property: var(--color-background-content);
  /* will be overriten by ControllerAnimation code */
}

div[view=ViewAnimation] fudge-stepper::after {
  margin-right: 0px;
  margin-left: 5px;
  background: var(--color-animation-property);
  vertical-align: middle;
  mask-image: url(../Html/Icon/AnimationKey.svg);
}