var AudioSpace;
(function (AudioSpace) {
    var ƒ = FudgeCore;
    var ƒAid = FudgeAid;
    let out;
    let camera;
    let speedCameraRotation = 0.2;
    let speedCameraTranslation = 0.01;
    let cmpAudio;
    let mtxRotatorX;
    let mtxRotatorY;
    let mtxTranslator;
    let mtxInner;
    let mtxOuter;
    let cntMouseX = new ƒ.Control("MouseX", speedCameraRotation);
    let cntMouseY = new ƒ.Control("MouseY", speedCameraRotation);
    // tslint:disable-next-line: typedef
    let parameter = {
        xAmplitude: 0,
        zAmplitude: 0,
        frequency: 1,
        cameraPosition: new ƒ.Vector3(0, 0, 5)
    };
    window.addEventListener("load", init);
    async function init(_event) {
        out = document.querySelector("output");
        const mtrWhite = new ƒ.Material("White", ƒ.ShaderLit, new ƒ.CoatColored(ƒ.Color.CSS("white")));
        const mtrGrey = new ƒ.Material("White", ƒ.ShaderLit, new ƒ.CoatColored(ƒ.Color.CSS("slategrey")));
        const inner = new ƒAid.Node("Inner", ƒ.Matrix4x4.IDENTITY(), mtrWhite, new ƒ.MeshPyramid());
        const outer = new ƒAid.Node("Outer", ƒ.Matrix4x4.IDENTITY(), mtrGrey, new ƒ.MeshPyramid());
        const mtxMesh = inner.mtxMeshPivot;
        mtxMesh.rotateX(-90);
        mtxMesh.translateZ(1, false);
        outer.mtxMeshPivot.copy(inner.mtxMeshPivot);
        const speaker = new ƒAid.Node("Speaker", ƒ.Matrix4x4.IDENTITY());
        speaker.addChild(inner);
        speaker.addChild(outer);
        speaker.addChild(new ƒAid.NodeCoordinateSystem("SpeakerSystem", ƒ.Matrix4x4.SCALING(ƒ.Vector3.ONE(2))));
        const rotator = new ƒAid.Node("Rotator", ƒ.Matrix4x4.IDENTITY());
        const translator = new ƒAid.Node("Translator", ƒ.Matrix4x4.IDENTITY());
        rotator.addChild(speaker);
        translator.addChild(rotator);
        mtxRotatorX = speaker.mtxLocal;
        mtxRotatorY = rotator.mtxLocal;
        mtxTranslator = translator.mtxLocal;
        mtxInner = inner.mtxLocal;
        mtxOuter = outer.mtxLocal;
        // audio setup
        const audio = new ƒ.Audio("hypnotic.mp3");
        cmpAudio = new ƒ.ComponentAudio(audio, true);
        speaker.addComponent(cmpAudio);
        cmpAudio.setPanner(ƒ.AUDIO_PANNER.CONE_OUTER_ANGLE, 180);
        cmpAudio.setPanner(ƒ.AUDIO_PANNER.CONE_INNER_ANGLE, 30);
        ƒ.Debug.log(cmpAudio.getMutatorOfNode(ƒ.AUDIO_NODE_TYPE.SOURCE));
        ƒ.Debug.log(cmpAudio.getMutatorOfNode(ƒ.AUDIO_NODE_TYPE.PANNER));
        ƒ.Debug.log(cmpAudio.getMutatorOfNode(ƒ.AUDIO_NODE_TYPE.GAIN));
        // camera setup
        const cmpCamera = new ƒ.ComponentCamera();
        camera = new ƒAid.CameraOrbit(cmpCamera, 3, 80, 0.1, 20);
        camera.nodeCamera.addComponent(new ƒ.ComponentAudioListener());
        camera.axisRotateX.addControl(cntMouseY);
        camera.axisRotateY.addControl(cntMouseX);
        // scene setup
        const graph = new ƒ.Node("Graph");
        graph.addChild(new ƒAid.NodeCoordinateSystem());
        graph.addChild(translator);
        graph.addChild(camera);
        const viewport = new ƒ.Viewport();
        const canvas = document.querySelector("canvas");
        viewport.initialize("Viewport", graph, cmpCamera, canvas);
        ƒ.AudioManager.default.listenTo(graph);
        ƒ.AudioManager.default.listenWith(camera.nodeCamera.getComponent(ƒ.ComponentAudioListener));
        // setup event handling
        canvas.addEventListener("pointermove", hndPointerMove);
        canvas.addEventListener("wheel", hndWheelMove);
        // canvas.addEventListener("mousedown", canvas.requestPointerLock);
        canvas.addEventListener("mouseup", () => document.exitPointerLock());
        document.addEventListener("keydown", () => canvas.focus());
        startInteraction(viewport);
        ƒ.Loop.addEventListener("loopFrame" /* ƒ.EVENT.LOOP_FRAME */, update);
        ƒ.Loop.start();
        function update(_event) {
            let panner = cmpAudio.getMutatorOfNode(ƒ.AUDIO_NODE_TYPE.PANNER);
            {
                let sin = Math.sin(Math.PI * panner["coneInnerAngle"] / 360);
                let cos = Math.cos(Math.PI * panner["coneInnerAngle"] / 360);
                mtxInner.copy(ƒ.Matrix4x4.IDENTITY());
                mtxInner.scaling = new ƒ.Vector3(2 * sin, 2 * sin, cos);
            }
            {
                let sin = Math.sin(Math.PI * panner["coneOuterAngle"] / 360);
                let cos = Math.cos(Math.PI * panner["coneOuterAngle"] / 360);
                mtxOuter.copy(ƒ.Matrix4x4.IDENTITY());
                mtxOuter.scaling = new ƒ.Vector3(2 * sin, 2 * sin, cos);
            }
            // mtxTranslator.translation = position;
            ƒ.AudioManager.default.update();
            viewport.draw();
            // printInfo(mtxBody, mtxCamera);
        }
    }
    function hndPointerMove(_event) {
        if (!_event.buttons)
            return;
        // camera.rotateY(_event.movementX * speedCameraRotation);
        // camera.rotateX(_event.movementY * speedCameraRotation);
        cntMouseX.setInput(_event.movementX);
        cntMouseY.setInput(_event.movementY);
    }
    function hndWheelMove(_event) {
        let panner = cmpAudio.getMutatorOfNode(ƒ.AUDIO_NODE_TYPE.PANNER);
        if (_event.shiftKey || _event.altKey) {
            let inner = panner["coneInnerAngle"] - (_event.altKey ? _event.deltaY / 10 : 0);
            inner = Math.min(360, Math.max(inner, 0));
            cmpAudio.setPanner(ƒ.AUDIO_PANNER.CONE_INNER_ANGLE, inner);
            let outer = panner["coneOuterAngle"] - (_event.shiftKey ? _event.deltaY / 10 : 0);
            outer = Math.min(360, Math.max(inner, outer));
            cmpAudio.setPanner(ƒ.AUDIO_PANNER.CONE_OUTER_ANGLE, outer);
        }
        else
            camera.distance += _event.deltaY * speedCameraTranslation;
    }
    // function printInfo(_mtxBody: ƒ.Matrix4x4, _mtxCamera: ƒ.Matrix4x4): void {
    //   // let posBody: ƒ.Vector3 = _body.mtxLocal.translation;
    //   let info: string = "<fieldset><legend>Info</legend>";
    //   info += `camera [${_mtxCamera.translation.toString()}] `;
    //   info += ` body [${_mtxBody.translation.toString()}]`;
    //   info += `<br/>`;
    //   info += `xAmplitude ${parameter.xAmplitude.toFixed(2)} `;
    //   info += `zAmplitude ${parameter.zAmplitude.toFixed(2)} `;
    //   info += `frequency ${parameter.frequency.toFixed(2)} `;
    //   info += "</fieldset>";
    //   out.innerHTML = info;
    // }
    function startInteraction(_viewport) {
        _viewport.canvas.focus();
        _viewport.canvas.addEventListener("keydown", move);
        function move(_event) {
            mtxTranslator.translateZ(0.1 *
                (_event.code == ƒ.KEYBOARD_CODE.W ? -1 :
                    _event.code == ƒ.KEYBOARD_CODE.S ? 1 :
                        0));
            mtxTranslator.translateX(0.1 *
                (_event.code == ƒ.KEYBOARD_CODE.A ? -1 :
                    _event.code == ƒ.KEYBOARD_CODE.D ? 1 :
                        0));
            mtxTranslator.translateY(0.1 *
                (_event.code == ƒ.KEYBOARD_CODE.X ? -1 :
                    _event.code == ƒ.KEYBOARD_CODE.E ? 1 :
                        0));
            switch (_event.code) {
                case ƒ.KEYBOARD_CODE.SPACE:
                    mtxRotatorX.copy(ƒ.Matrix4x4.IDENTITY());
                    mtxRotatorY.copy(ƒ.Matrix4x4.IDENTITY());
                    mtxTranslator.copy(ƒ.Matrix4x4.IDENTITY());
                    // parameter.xAmplitude = parameter.zAmplitude = 0;
                    break;
                // case ƒ.KEYBOARD_CODE.PLUS+:
                //   if (parameter.xAmplitude)
                //     parameter.xAmplitude = 0;
                //   else {
                //     parameter.xAmplitude = mtxRotatorX.translation.x;
                //   }
                //   break;
                // case ƒ.KEYBOARD_CODE.Y:
                //   if (parameter.zAmplitude)
                //     parameter.zAmplitude = 0;
                //   else {
                //     parameter.zAmplitude = mtxRotatorX.translation.z;
                //   }
                //   break;
                case ƒ.KEYBOARD_CODE.ARROW_RIGHT:
                    mtxRotatorY.rotateY(5);
                    break;
                case ƒ.KEYBOARD_CODE.ARROW_LEFT:
                    mtxRotatorY.rotateY(-5);
                    break;
                case ƒ.KEYBOARD_CODE.ARROW_UP:
                    mtxRotatorX.rotateX(-5);
                    break;
                case ƒ.KEYBOARD_CODE.ARROW_DOWN:
                    mtxRotatorX.rotateX(5);
                    break;
                // case ƒ.KEYBOARD_CODE.Q:
                //   // parameter.frequency *= 0.8;
                //   break;
                // case ƒ.KEYBOARD_CODE.E:
                //   // parameter.frequency *= 1 / 0.8;
                //   break;
                // case ƒ.KEYBOARD_CODE.P:
                //   break;
                case ƒ.KEYBOARD_CODE.ENTER:
                    //play Sound
                    console.log("Play Audio");
                    if (cmpAudio.isPlaying)
                        cmpAudio.play(false);
                    else
                        cmpAudio.play(true);
                    break;
            }
        }
    }
})(AudioSpace || (AudioSpace = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BhdGlhbFNvdW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU3BhdGlhbFNvdW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQVUsVUFBVSxDQXFPbkI7QUFyT0QsV0FBVSxVQUFVO0lBQ2xCLElBQU8sQ0FBQyxHQUFHLFNBQVMsQ0FBQztJQUNyQixJQUFPLElBQUksR0FBRyxRQUFRLENBQUM7SUFFdkIsSUFBSSxHQUFzQixDQUFDO0lBRTNCLElBQUksTUFBd0IsQ0FBQztJQUM3QixJQUFJLG1CQUFtQixHQUFXLEdBQUcsQ0FBQztJQUN0QyxJQUFJLHNCQUFzQixHQUFXLElBQUksQ0FBQztJQUMxQyxJQUFJLFFBQTBCLENBQUM7SUFDL0IsSUFBSSxXQUF3QixDQUFDO0lBQzdCLElBQUksV0FBd0IsQ0FBQztJQUM3QixJQUFJLGFBQTBCLENBQUM7SUFDL0IsSUFBSSxRQUFxQixDQUFDO0lBQzFCLElBQUksUUFBcUIsQ0FBQztJQUUxQixJQUFJLFNBQVMsR0FBYyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFDeEUsSUFBSSxTQUFTLEdBQWMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBRXhFLG9DQUFvQztJQUNwQyxJQUFJLFNBQVMsR0FBRztRQUNkLFVBQVUsRUFBRSxDQUFDO1FBQ2IsVUFBVSxFQUFFLENBQUM7UUFDYixTQUFTLEVBQUUsQ0FBQztRQUNaLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDdkMsQ0FBQztJQUdGLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFFdEMsS0FBSyxVQUFVLElBQUksQ0FBQyxNQUFhO1FBQy9CLEdBQUcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxD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QUMsTUFBTSxDQUFDLENBQUM7WUFDNUUsQ0FBQztnQkFDQyxJQUFJLEdBQUcsR0FBVyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQVcsTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7Z0JBQzdFLElBQUksR0FBRyxHQUFXLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBVyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztnQkFDN0UsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7Z0JBQ3RDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUMxRCxDQUFDO1lBQ0QsQ0FBQztnQkFDQyxJQUFJLEdBQUcsR0FBVyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQVcsTUFBTSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7Z0JBQzdFLElBQUksR0FBRyxHQUFXLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBVyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztnQkFDN0UsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7Z0JBQ3RDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUMxRCxDQUFDO1lBRUQsd0NBQXdDO1lBQ3hDLENBQUMsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ2hDLFFBQVEsQ0FB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